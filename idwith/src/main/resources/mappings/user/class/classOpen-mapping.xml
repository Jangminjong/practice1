<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="classDAO">
 	<resultMap type="classVO" id="classResult">
 		<result property="class_open_seq" column="class_open_seq"/>
 		<result property="class_open_name" column="class_open_name"/>
 		<result property="class_open_class_code" column="class_open_class_code"/>
 		<result property="class_open_category" column="class_open_gotegory"/>
 		<result property="class_open_price" column="class_open_price"/>
 		<result property="class_open_post_address" column="class_open_post_address"/>
 		<result property="class_open_address" column="class_open_address"/>
 		<result property="class_open_detail_address" column="class_open_detail_address"/>
 		<result property="class_open_reference" column="class_open_reference"/>
 		<result property="class_open_time" column="class_open_time"/>
 		<result property="class_open_photo" column="class_open_photo" typeHandler="org.apache.ibatis.type.ArrayTypeHandler"/>
 		<result property="class_open_date" column="class_open_date"/>
 		<result property="class_close_time" column="class_close_time"/>
 		<result property="class_open_difficult" column="class_open_difficult"/>
 		<result property="class_open_info" column="class_open_info"/>
 		<result property="class_open_phone" column="class_open_phone"/>
 		<result property="class_open_max_person" column="class_open_max_person"/>
 		<result property="class_open_seller" column="class_open_seller"/>
 	</resultMap>
 	
 	<resultMap type="classCategoryVO" id="classCategoryResult">
 		<result property="class_category_code" column="class_category_code"/>
 		<result property="class_category_name" column="class_category_name"/>
 	</resultMap>
 	
 	<select id="getPopularClassList" resultMap="classResult">
 		SELECT * FROM (
			SELECT ROW_NUMBER() OVER() as rownum, A.* FROM (
			SELECT class_open.*, class_category.class_category_name, class_order_count.class_order_cnt FROM class_open 
				LEFT OUTER JOIN class_category ON class_open.class_open_class_code= class_category.class_category_code
				LEFT OUTER JOIN (
					SELECT COUNT(class_order_code) as class_order_cnt, class_order_code FROM class_order
							GROUP BY class_order_code
							HAVING COUNT(class_order_code)>0 ORDER BY class_order_cnt DESC)AS class_order_count	
				ON class_open.class_open_class_code = class_order_count.class_order_code ORDER BY class_order_count.class_order_code)A)AS foo 
		WHERE rownum BETWEEN 1 AND 4
 	</select>
 	<select id="getCategoryName" parameterType="string" resultType="classCategoryVO">
 		SELECT * FROM class_category WHERE class_category_code=#{class_category_code}
 	</select>
 	<select id="getClassCount" parameterType="string" resultType="_int">
 		SELECT count(*) FROM class_open WHERE class_open_category=#{class_category_code}
 	</select>
 	<select id="getClassList" resultMap="classResult">
 		SELECT * FROM (
			SELECT ROW_NUMBER() OVER() as rownum, A.* FROM (
			SELECT class_open.*, class_category.class_category_name FROM class_open 
				LEFT OUTER JOIN class_category 
				ON class_open.class_open_category= class_category.class_category_code WHERE class_open.class_open_category=#{set})A)AS foo 
		WHERE rownum BETWEEN #{start} AND #{end}
 	</select>
 	<select id="getCategoryList" resultType="classCategoryVO">
 		SELECT * FROM class_category 
 	</select>
 	<select id="getAllClassCount" resultType="_int">
 		SELECT count(*) FROM class_open
 	</select>
 	<select id="getAllClassList" resultMap="classResult">
 		SELECT * FROM (
			SELECT ROW_NUMBER() OVER() as rownum, A.* FROM (
			SELECT class_open.*, class_category.class_category_name, class_order_count.class_order_cnt FROM class_open 
				LEFT OUTER JOIN class_category ON class_open.class_open_class_code= class_category.class_category_code
				LEFT OUTER JOIN (
					SELECT COUNT(class_order_code) as class_order_cnt, class_order_code FROM class_order
							GROUP BY class_order_code
							HAVING COUNT(class_order_code)>0 ORDER BY class_order_cnt DESC)AS class_order_count	
				ON class_open.class_open_class_code = class_order_count.class_order_code ORDER BY class_order_count.class_order_code)A)AS foo 
		WHERE rownum BETWEEN #{start} AND #{end}
 	</select>
 	<select id="getClassCountForRegion" parameterType="string" resultType="_int">
 	 <![CDATA[
 		SELECT count(*) FROM class_open WHERE class_open_address LIKE '%'||#{region}||'%'
 	]]>
 	</select>
 	<select id="getClassListForRegion" resultMap="classResult">
 	 <![CDATA[
 		SELECT * FROM (
			SELECT ROW_NUMBER() OVER() as rownum, A.* FROM (
			SELECT class_open.*, class_category.class_category_name, class_order_count.class_order_cnt FROM class_open 
				LEFT OUTER JOIN class_category ON class_open.class_open_class_code= class_category.class_category_code
				LEFT OUTER JOIN (
					SELECT COUNT(class_order_code) as class_order_cnt, class_order_code FROM class_order
							GROUP BY class_order_code
							HAVING COUNT(class_order_code)>0 ORDER BY class_order_cnt DESC)AS class_order_count	
				ON class_open.class_open_class_code = class_order_count.class_order_code ORDER BY class_order_count.class_order_code )A WHERE class_open_address LIKE '%'||#{set}||'%')AS foo 
		WHERE rownum BETWEEN #{start} AND #{end}
	 ]]>
 	</select>
 	<!--  <update id="updateBoard" parameterType="myboard">
 		UPDATE myboard
 		SET title=#{title}, content=#{content} WHERE seq = #{seq}
 	</update>
 	<delete id="deleteBoard" parameterType="myboard">
 		DELETE FROM myboard WHERE seq=#{seq}
 	</delete>
 	<select id="getBoard" resultType="myboard">
 		SELECT * FROM myboard WHERE seq=#{seq}
 	</select>
 	<select id="getBoardList" resultMap="boardResult">
 		SELECT * FROM myboard
 		WHERE 1=1 
 		<if test="searchCondition=='TITLE'">
 			AND title LIKE '%'||#{searchKeyword}||'%'
 		</if>
 		<if test="searchCondition=='CONTENT'">
 			AND content LIKE '%'||#{searchKeyword}||'%'
 		</if>
 		ORDER BY seq DESC
 	</select>
 	<select id="getBoardList_C" resultMap="boardResult">
 		SELECT * FROM myboard
 		WHERE content LIKE '%'||#{searchKeyword}||'%'
 		ORDER BY seq DESC
 	</select>--> 
</mapper>